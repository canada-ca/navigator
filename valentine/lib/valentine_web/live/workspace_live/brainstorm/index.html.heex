<div class="d-flex flex-column height-full">
  <!-- Header with filters and controls -->
  <div class="border-bottom p-3 d-flex flex-wrap flex-items-center gap-2">
    <h1 class="h3 mr-3">{gettext("Brainstorm Board")}</h1>
    
<!-- Search filter -->
    <div class="mr-2">
      <.text_input
        class="form-control-sm"
        placeholder={gettext("Search items...")}
        value={@filters.search}
        phx-change="filter"
        phx-value-type="search"
        name="search"
      />
    </div>
    
<!-- Status filter -->
    <div class="mr-2">
      <.select
        class="form-select-sm"
        name="status"
        value={@filters.status || ""}
        phx-change="filter"
        phx-value-type="status"
        options={[
          {"All Statuses", ""},
          {"Draft", "draft"},
          {"Clustered", "clustered"},
          {"Candidate", "candidate"},
          {"Used", "used"},
          {"Archived", "archived"}
        ]}
      />
    </div>
    
<!-- Type filter -->
    <div class="mr-2">
      <.select
        class="form-select-sm"
        name="type"
        value={@filters.type || ""}
        phx-change="filter"
        phx-value-type="type"
        options={[
          {"All Types", ""}
          | Enum.map(get_available_types(), &{type_display_name(&1), Atom.to_string(&1)})
        ]}
      />
    </div>
    
<!-- Clear filters button -->
    <.button
      :if={@filters != %{status: nil, type: nil, cluster: nil, search: ""}}
      size="small"
      phx-click="clear_filters"
    >
      {gettext("Clear Filters")}
    </.button>
  </div>
  
<!-- Board columns -->
  <div class="flex-auto overflow-auto">
    <div class="d-flex height-full" style="min-width: max-content;">
      <%= for type <- get_available_types() do %>
        <% items = Map.get(@items_by_type, type, []) %>
        <% visible_items =
          Enum.reject(items, &(&1.status == :archived and @filters.status != :archived)) %>
        <% clustered_items = Enum.group_by(visible_items, & &1.cluster_key) %>

        <div class="flex-shrink-0 border-right p-3" style="width: 300px; min-height: 100%;">
          <!-- Column header -->
          <div class="d-flex flex-items-center flex-justify-between mb-3">
            <div>
              <h4 class="h5 text-bold">{type_display_name(type)}</h4>
              <span class="text-small color-fg-muted">
                {length(visible_items)} items
                <%= if @filters.status == nil do %>
                  Â· {Enum.count(visible_items, &(&1.status == :used))} used
                <% end %>
              </span>
            </div>
            <.button
              size="small"
              is_icon_button
              aria-label={"Add #{type_display_name(type)}"}
              phx-click="start_creating"
              phx-value-type={type}
            >
              <.octicon name="plus-16" />
            </.button>
          </div>
          
<!-- Create new item form -->
          <%= if @creating_type == Atom.to_string(type) do %>
            <.form for={%{}} as={:create} phx-submit="create_item" class="mb-3">
              <input type="hidden" name="type" value={type} />
              <.textarea
                name="text"
                placeholder={"Enter #{type_display_name(type)} details..."}
                rows="3"
                class="form-control-sm mb-2"
                required
              />
              <div class="d-flex gap-1">
                <.button type="submit" size="small" is_primary>
                  {gettext("Add")}
                </.button>
                <.button type="button" size="small" phx-click="cancel_creating">
                  {gettext("Cancel")}
                </.button>
              </div>
            </.form>
          <% end %>
          
<!-- Items grouped by cluster -->
          <div class="d-flex flex-column gap-2">
            <%= for {cluster_key, cluster_items} <- clustered_items do %>
              <%= if cluster_key do %>
                <!-- Cluster header -->
                <div class="p-2 color-bg-neutral-subtle rounded-2 border">
                  <div class="text-small text-bold color-fg-accent">
                    <.octicon name="package-16" class="mr-1" />
                    {cluster_key}
                  </div>
                  <div class="text-small color-fg-muted">
                    {length(cluster_items)} items
                  </div>
                </div>
              <% end %>
              
<!-- Items in cluster (or ungrouped items if cluster_key is nil) -->
              <%= for item <- cluster_items do %>
                <div class={"card p-2 #{status_class(item.status)} position-relative"}>
                  <!-- Duplicate warning badge -->
                  <%= if has_duplicate_warning?(item) do %>
                    <.octicon
                      name="alert-16"
                      class="position-absolute color-fg-attention"
                      style="top: 4px; right: 4px;"
                      title={gettext("Potential duplicate item")}
                    />
                  <% end %>
                  
<!-- Item content -->
                  <%= if @editing_item == item.id do %>
                    <!-- Edit form -->
                    <.form for={%{}} as={:update} phx-submit="update_item" class="mb-2">
                      <input type="hidden" name="item_id" value={item.id} />
                      <.textarea
                        name="text"
                        value={item.raw_text}
                        rows="3"
                        class="form-control-sm mb-2"
                        required
                      />
                      <div class="d-flex gap-1">
                        <.button type="submit" size="small" is_primary>
                          {gettext("Save")}
                        </.button>
                        <.button type="button" size="small" phx-click="cancel_editing">
                          {gettext("Cancel")}
                        </.button>
                      </div>
                    </.form>
                  <% else %>
                    <!-- Display mode -->
                    <div
                      class="text-small mb-2"
                      phx-click="start_editing"
                      phx-value-id={item.id}
                      style="cursor: pointer;"
                    >
                      {item.raw_text}
                    </div>
                  <% end %>
                  
<!-- Item metadata and actions -->
                  <div class="d-flex flex-items-center flex-justify-between text-small color-fg-muted">
                    <div>
                      <!-- Status badge -->
                      <.label size="small" color={status_color(item.status)}>
                        {Phoenix.Naming.humanize(item.status)}
                      </.label>
                      
<!-- Cluster indicator -->
                      <%= if not is_nil(item.cluster_key) and is_nil(cluster_key) do %>
                        <span class="ml-1">
                          <.octicon name="package-16" />
                          {item.cluster_key}
                        </span>
                      <% end %>
                    </div>
                    
<!-- Action menu -->
                    <.action_menu is_aligned_end>
                      <:toggle class="btn btn-invisible btn-sm">
                        <.octicon name="kebab-horizontal-16" />
                      </:toggle>

                      <.action_list>
                        <.action_list_item phx-click="start_editing" phx-value-id={item.id}>
                          <.octicon name="pencil-16" />
                          {gettext("Edit")}
                        </.action_list_item>
                        
<!-- Status transitions -->
                        <%= case item.status do %>
                          <% :draft -> %>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="clustered"
                            >
                              <.octicon name="package-16" />
                              {gettext("Mark as Clustered")}
                            </.action_list_item>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="archived"
                            >
                              <.octicon name="archive-16" />
                              {gettext("Archive")}
                            </.action_list_item>
                          <% :clustered -> %>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="candidate"
                            >
                              <.octicon name="check-16" />
                              {gettext("Mark as Candidate")}
                            </.action_list_item>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="archived"
                            >
                              <.octicon name="archive-16" />
                              {gettext("Archive")}
                            </.action_list_item>
                          <% :candidate -> %>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="used"
                            >
                              <.octicon name="check-circle-16" />
                              {gettext("Mark as Used")}
                            </.action_list_item>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="archived"
                            >
                              <.octicon name="archive-16" />
                              {gettext("Archive")}
                            </.action_list_item>
                          <% :used -> %>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="candidate"
                            >
                              <.octicon name="arrow-left-16" />
                              {gettext("Mark as Candidate")}
                            </.action_list_item>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="archived"
                            >
                              <.octicon name="archive-16" />
                              {gettext("Archive")}
                            </.action_list_item>
                          <% :archived -> %>
                            <.action_list_item
                              phx-click="update_status"
                              phx-value-id={item.id}
                              phx-value-status="draft"
                            >
                              <.octicon name="arrow-left-16" />
                              {gettext("Restore to Draft")}
                            </.action_list_item>
                        <% end %>
                        
                        <!-- Clustering -->
                        <%= if is_nil(item.cluster_key) do %>
                          <.action_list_item>
                            <.octicon name="package-16" />
                            {gettext("Assign to Cluster")}
                            <!-- TODO: Add cluster assignment dialog -->
                          </.action_list_item>
                        <% else %>
                          <.action_list_item
                            phx-click="assign_cluster"
                            phx-value-id={item.id}
                            phx-value-cluster=""
                          >
                            <.octicon name="package-16" />
                            {gettext("Remove from Cluster")}
                          </.action_list_item>
                        <% end %>
                        
                        <.action_list_item
                          phx-click="delete_item"
                          phx-value-id={item.id}
                          data-confirm={gettext("Are you sure you want to delete this item?")}
                          is_danger
                        >
                          <.octicon name="trash-16" />
                          {gettext("Delete")}
                        </.action_list_item>
                      </.action_list>
                    </.action_menu>
                  </div>
                </div>
              <% end %>
            <% end %>
          </div>
          
<!-- Empty state -->
          <%= if length(visible_items) == 0 do %>
            <div class="blankslate blankslate-spacious text-center">
              <.octicon name="light-bulb-16" class="blankslate-icon" />
              <h3 class="blankslate-heading">No {type_display_name(type)} items</h3>
              <p class="blankslate-body">
                Start brainstorming by adding your first {String.downcase(type_display_name(type))} item.
              </p>
              <.button phx-click="start_creating" phx-value-type={type} is_primary>
                <.octicon name="plus-16" /> Add {type_display_name(type)}
              </.button>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Helper functions that need to be available in template -->
<%= if false do %>
  {get_available_types()}
  {type_display_name(:threat)}
  {status_class(:draft)}
  {has_duplicate_warning?(%{metadata: %{}})}
  {status_color(:draft)}
<% end %>
