name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # PostgreSQL service for database operations
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: valentine_dev
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Elixir and Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: 27.2
          elixir-version: 1.18.4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: valentine/assets/package-lock.json

      - name: Install Elixir dependencies
        working-directory: ./valentine
        run: mix deps.get

      - name: Install JavaScript dependencies
        working-directory: ./valentine/assets
        run: npm ci

      - name: Set up database
        working-directory: ./valentine
        env:
          DATABASE_URL: "ecto://postgres:postgres@localhost/valentine_dev"
          MIX_ENV: dev
        run: |
          mix ecto.create --quiet
          mix ecto.migrate --quiet

      - name: Compile Elixir dependencies
        working-directory: ./valentine
        run: mix deps.compile